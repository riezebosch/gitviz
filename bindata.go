// Code generated for package main by go-bindata DO NOT EDIT. (@generated)
// sources:
// html/favicon.ico
// html/index.html
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _htmlFaviconIco = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x96\x5b\x68\x1c\x55\x18\xc7\x4f\xb5\x6b\x53\xb1\x4d\xa2\xed\x83\x22\xc9\x26\x73\x3b\x93\x07\x41\x03\x25\xa2\xd0\x1a\x93\xec\xdc\x27\x6d\xc4\xa2\x60\x71\x9f\x7d\xf1\x5d\x5a\x4a\xa9\x22\xbe\x14\xd2\x54\x08\x6a\x10\xda\x87\x0a\xa2\x0f\x45\xf1\x2d\xb6\x5e\xaa\x90\x97\x54\x1f\xa4\x1a\x63\x6b\xbb\x89\xbb\xdd\xec\x65\x76\x76\x67\x26\x97\x23\x67\x76\xa7\x33\x3b\x3b\x3b\xd9\xdd\x6e\x1b\xd0\x7c\xf0\x11\x32\x33\xff\xf3\xfb\x7f\xdf\x39\xe7\x4b\x00\xd8\x01\x1e\x02\x5d\x5d\xf8\x67\x14\xc0\x08\x00\x34\x00\x20\x1a\xad\xfc\xbe\x0f\x00\x25\x02\x00\x04\x00\x74\xe1\xe7\xa0\xfc\xdc\x8e\x08\x68\x22\xa6\x23\x64\x2c\x3d\xd9\xc7\x67\xcf\x00\x30\xbb\xb3\x19\xa5\xad\xe5\x72\x53\xac\x62\x21\x46\x5d\x45\x24\x97\x3f\xdb\xf8\x1a\xd3\x11\x22\x96\x3b\xc7\xaa\x6b\x88\x55\x57\x6d\x3d\x3b\xbe\x81\x48\xae\x70\x16\xbf\x0b\xd7\xce\x45\x08\x3e\x77\x6e\x40\x5d\x43\x8c\xac\xa3\x28\x7f\xe7\x4a\x1f\x97\xf9\x9e\x96\x4b\x88\x1d\x47\x28\x2a\xe4\xa7\xea\xfb\x98\x76\xb5\x8a\x89\x48\x3e\xfb\x1b\x20\xbf\xde\xf5\xe4\xe0\xdc\xa3\xa4\xa0\xfd\x69\xfb\x38\x8c\x10\x29\x14\x02\xd6\x98\xdd\x49\x72\xf9\xa9\x32\xb7\x80\x68\xa5\x84\x28\x51\x5b\xe9\x19\x4b\x0c\xf6\x1e\xfc\x7b\x88\x10\xf5\x1c\xa3\x5a\x88\x55\xd7\xd1\x00\x5e\x43\x32\x3d\xfd\x98\x8b\xe0\xfe\xb0\x8e\xb6\x92\x98\xd5\x17\x4b\x9d\xec\x8b\xa5\x4f\xb2\x13\x98\xab\x15\x49\x51\xbb\x71\xd7\x87\x68\x4e\xda\xf5\xc6\x92\x17\x58\xc5\xac\xd2\xd2\xb2\x5e\xae\x77\xf4\xd6\xf1\xe8\xd8\xf2\x89\x81\xc3\x1b\x88\x18\x49\xbf\xda\x3d\xb8\xd0\x49\xf2\xda\x65\xec\xc1\x5e\x5f\xd0\x3e\xed\x8b\x25\xbf\x64\x55\xcb\xd6\xb8\x59\xb4\xdf\x47\x63\xb7\x8e\x47\x47\x53\xa7\x49\x21\x9f\xe8\x1e\x59\xe9\xec\x7c\xf1\x46\x37\x21\xe4\xbe\x1d\x38\x52\xd6\x13\x5c\xe1\x73\x30\x74\x73\x37\x21\xe4\x67\x98\xf1\x0d\x5b\xe7\x24\x7b\x04\xa1\xfe\xb1\xf4\x7b\x04\x5f\x38\xd6\x33\x9a\x7e\xa1\x9f\xb3\x4e\x90\x92\xb5\xc0\xa8\xeb\xf6\x3b\x42\xb4\x3e\xc6\x5a\xbb\x05\x43\x3f\xee\x26\x04\x7d\x86\x19\x47\x08\xef\x15\xa3\x9a\x88\x14\x8b\x85\xde\xd8\xd2\x21\xfc\x9a\x10\x4a\xa7\xd8\x8a\x67\x5b\x2b\x19\x9f\x80\xde\xc5\x8e\xaa\x2d\x38\xb8\xd8\x41\x08\xc6\x0c\xfe\x06\xfb\x23\x79\xfd\x07\xfc\xd8\xae\x59\xd4\x97\x71\x3f\xf0\x73\x4a\xb0\x6a\xb5\x4e\x3c\x8d\x7d\x94\x2e\x50\x62\x71\xb1\x67\x38\xf9\x1c\xc9\x65\xde\xa6\x44\xf3\x3b\x46\x5d\x2b\x6b\xa5\x10\x6d\x25\x1e\x3f\x70\x7d\xef\xfe\x97\xb2\x04\x29\x94\xde\x75\xfc\xba\xdc\xd9\x50\xad\x27\x76\x10\xbc\x71\x9e\xad\xf4\xd9\xd6\x92\xd7\x77\x35\xa8\x2d\x47\xef\x62\x47\xbf\xa8\x7f\xd6\x2f\xe8\x17\x9b\xd6\xfe\x8f\x02\x56\x66\xe4\x21\xef\x9c\xdc\xd7\xbe\xf5\x69\x29\xff\x2c\x23\xac\x5c\x62\x84\xcc\x17\x50\xd2\x9e\x69\xdf\xca\x0d\xb1\x63\x50\xd2\x90\x37\x19\xb9\x30\xf2\x80\xd8\x63\x01\x6c\x27\x87\xef\x33\x3b\xa8\x6e\x5f\xea\x2f\xdf\x27\x76\x58\xdd\xf6\xdf\x25\x4f\xb6\xb5\x0f\x9b\xb3\xfd\xfc\x22\xce\xb6\xf4\x21\xac\xe7\x64\xec\x36\x22\xb9\x44\x10\xbb\x9c\xca\xbd\x79\xd8\xa4\xee\xd3\x8c\x5c\xd8\xc3\xc8\x7a\x27\x23\xeb\x67\x6a\xd8\x36\xbf\x84\xb3\xa5\xbd\x08\xab\x9b\x12\xee\x5c\xf1\x7f\x4f\xf1\xa9\x5f\x02\xd8\x76\x42\xc5\x68\xaa\x0f\x0d\xec\xf7\x07\x7e\x0d\x23\x17\x3f\xf2\xb3\x61\x99\xed\x64\x43\x7d\x68\xe4\xac\x91\x5c\x62\x85\x91\xf5\x47\x3c\xec\x4e\x92\x4b\x18\x01\x75\x7b\xd2\xc4\x19\xda\x87\x66\xee\x18\xc5\x27\xaf\xb9\xbd\x4f\xfe\xc1\xc8\xa5\x7a\x75\x3b\xec\x50\x0f\xad\xdc\x31\x4f\xfd\x9b\xd5\xed\x49\x0b\x41\xd5\x1a\xf6\xb1\x1b\x99\x6b\x55\x6c\x7c\xf7\x1c\xbd\x7d\x07\x3d\x6c\x8a\xfb\x07\x31\x92\x76\x89\x16\xd2\xd7\x02\xd8\x95\x5c\x1d\xa9\xb0\x9f\x6f\x61\xb6\xd4\xf0\x9d\x9e\x53\x7c\x32\x01\x15\x63\xbf\xf3\x0e\x2a\xe6\x64\x00\xdb\xc9\x03\x34\xb7\xf4\x7b\xb3\xec\x60\xfe\xdd\x9e\x1f\xf3\xef\x2d\xee\x47\x00\x1b\xd1\x62\xe6\x57\x2a\x76\x7b\xb9\x81\x79\x5e\x33\x5b\x30\xd3\x5d\x7f\x69\xdd\xb3\xdf\xaf\xd7\xe7\xaf\x56\x25\x25\xac\xdc\x84\x92\x26\x37\x53\xb7\x73\xd6\xbc\x7c\xa7\x7e\x5a\xcc\xfe\x04\x15\xb3\xea\xbf\x1c\xa8\x5a\xef\x07\xb1\xa1\xba\x86\x53\x28\x9f\xdf\x42\xbc\xb1\xba\xdd\x33\x4e\x71\x89\x0d\x77\x8f\x0d\x3c\x13\xff\xf2\xec\xf9\x2b\x8c\x6c\x9e\xa7\xa5\xdc\xd5\x10\xf6\x1b\x5e\x9f\xae\x87\xf0\xba\x7d\x77\x6c\x07\x54\x8c\x27\x18\x49\xfb\x0a\x2a\x66\x87\xc3\xae\x73\xd6\xea\xb2\x5d\x0f\x7a\xbc\x51\x36\x2d\xa4\x16\xa0\x62\x3c\xec\x70\x2b\xec\x89\x6a\xb6\x9f\x5f\x9f\xed\xf1\xf0\x66\x3d\xb6\x7b\xc7\x96\x35\xa8\x18\x7b\xab\xf6\x59\x31\x8f\xb6\x5a\x77\xad\x87\x62\x3c\xa4\xe7\xb8\x3f\x17\xfd\x1a\x5a\xcc\x5f\x6e\x07\xbb\xca\x43\xdd\x79\x6e\x7c\x58\xcb\xcf\xcc\xb7\xda\xf3\xba\x1e\x94\x52\xdc\x3f\xcf\x69\x31\xf3\x33\x54\xcc\xc7\x9c\x6f\xa0\x6a\xed\x81\xaa\x75\xaa\x5d\x75\xfb\x03\x2a\x46\xdc\x65\x67\xaf\xba\xcf\xcd\xa3\x14\x9f\x4a\xd5\x9b\x2d\xed\x60\x7b\x3c\xbc\xc3\x48\xda\x37\x1e\x76\xcb\x77\xec\xde\xbd\x98\xaf\x6d\x21\xfb\xa9\xad\x62\x57\xf8\x11\xa8\x5a\x6f\x6d\x05\xbb\xca\x87\xba\x1a\xdf\x2a\xb6\xc7\xc3\x04\x2d\x66\xe7\x69\x31\x37\x0f\xd5\xb5\xf1\x07\xc9\xde\x8e\xed\xd8\x8e\xff\x46\xfc\x1b\x00\x00\xff\xff\x3e\xc2\x78\xb2\x76\x19\x00\x00")

func htmlFaviconIcoBytes() ([]byte, error) {
	return bindataRead(
		_htmlFaviconIco,
		"html/favicon.ico",
	)
}

func htmlFaviconIco() (*asset, error) {
	bytes, err := htmlFaviconIcoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "html/favicon.ico", size: 6518, mode: os.FileMode(420), modTime: time.Unix(1686147163, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _htmlIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x3a\xed\x8e\xdb\x38\x92\xff\xfb\x29\x6a\x94\xdb\xb1\x0c\xc8\xb4\x24\x7f\xbb\xed\xbe\xdb\xf4\x64\x2e\x8b\x4b\x76\x0f\x9b\xc1\x0e\x30\x41\x80\xa1\x25\xca\x62\x5a\x22\x05\x92\x76\xdb\xc9\xf4\xbb\x1f\x8a\x92\xdd\xb2\x25\x77\xba\x67\x30\xb8\x35\x90\x34\x59\xac\x2a\x56\x15\xeb\x8b\xb4\x17\xdf\xc5\x32\x32\xfb\x82\x41\x6a\xf2\xec\xe6\x6a\x51\xfe\xb9\x5a\xa4\x8c\xc6\x37\x57\x00\x00\x0b\xc3\x4d\xc6\x6e\xd6\xdc\x6c\xf9\x97\x45\xbf\x9c\x95\x2b\x19\x17\x77\xa0\x58\xb6\x74\x74\x2a\x95\x89\x36\x06\x78\x24\x85\x03\xc8\x71\xe9\xf0\x9c\xae\x59\x7f\xd7\x2b\x61\xa9\x62\xc9\xd2\x49\xe8\x16\xa7\x84\x47\xd2\xa9\xb8\xe8\x48\xf1\xc2\x54\x34\x86\xed\x4c\xff\x33\xdd\xd2\x12\xea\x80\x56\xd1\xd2\x49\x8d\x29\xf4\xbc\xdf\xdf\x88\xe2\x6e\x4d\x22\x99\xf7\xb7\x5c\xf7\x04\x33\xf7\x52\xdd\xf5\xb5\xa1\x22\xa6\x99\x14\xac\xbf\xc9\xe3\xfa\x12\xc9\xb9\x20\x9f\xb5\x73\xb3\xe8\x97\xfc\x0e\x5b\x9a\x7d\xc6\xea\x3b\x46\x5a\x57\xe2\xe0\x07\x8d\xe0\x1d\x67\x2b\x19\xef\xe1\xeb\x71\x6a\x11\x18\x5f\xa7\x66\x0e\x81\xef\xff\xe5\xfa\x64\xe5\x9e\xc7\x26\x6d\x5b\xc8\xa9\x5a\x73\x31\x07\xff\x14\x5c\xd0\x38\xe6\x62\xdd\x80\x27\x52\x98\x5e\x42\x73\x9e\xed\xe7\xf0\x57\xc5\x69\xe6\xc1\x5b\x96\x6d\x99\xe1\x11\xf5\x40\x53\xa1\x7b\x9a\x29\x9e\x3c\x92\x3d\x5c\x1d\x87\xaf\xf2\x7d\x65\x81\x97\x0a\x3e\xa9\xc3\xeb\x1c\x63\x6a\xe8\x19\xb3\x42\x6a\x6e\xb8\x14\x73\x48\xf8\x8e\xc5\xa7\xfc\x54\xb9\xd1\x99\x5a\x46\x16\x0d\xd8\x37\x2d\x43\x46\x2c\x3f\x5d\x5b\xc9\x5d\x4f\xf3\x2f\x76\x79\x25\x55\xcc\x54\x6f\x25\x77\xd7\x2f\x53\x75\x70\x0e\x5f\xd1\xe8\x6e\xad\xe4\x46\xc4\xbd\x48\x66\x52\xcd\x61\xad\xd8\xfe\x14\x47\x6e\x99\x4a\x32\x79\x3f\x07\x1d\x29\x99\x65\xa7\xab\x15\xd9\x7d\xca\x0d\x6b\x39\x4f\xcd\xbf\xb0\x39\x04\x24\xac\xeb\x53\x37\xf2\x6a\x63\x8c\x14\xfa\x25\x76\xce\x58\x62\xe6\x10\x9e\x5b\xc8\x1a\xfa\xe2\x3e\x09\xcf\x0c\x53\x67\xdb\x64\x5c\x9b\x9e\x8d\x8c\x1e\x46\xc6\x1c\x84\x14\xec\xdb\xde\x5a\xe3\xfb\x5f\x39\x8b\x39\x45\xcb\x30\x26\x80\x8a\x18\xdc\x9c\xee\x7a\x95\xbd\xc7\xbe\x5f\xec\xba\x67\x9b\x5e\xf4\x54\x78\x2a\x98\x6a\x7b\xc2\x05\xe7\xc4\x4f\xcc\x75\x91\xd1\x7d\x9b\x26\xe7\x1c\xda\x2d\xff\x32\x26\x64\xcd\x4d\xba\x59\xf5\x22\xa9\x44\xc3\xba\xdf\x64\x75\x3a\x5a\xf4\xed\x49\xdc\x5c\x2d\xfa\x65\x2a\xbe\x5a\x60\x1e\xaa\xf2\x57\xcc\xb7\xc0\xe3\xa5\x73\x34\x1e\x66\xb8\x98\x6f\xab\xe5\x42\x31\xbb\x8c\x66\x71\x6e\xbe\x7f\x35\x1d\x8f\xa7\xd7\x10\x65\x3c\xba\x03\x29\x80\x82\x90\x31\x03\x23\x41\x33\x06\x26\x65\x10\x49\x61\x98\x30\x1a\x52\xa6\xd8\xa2\x5f\xa8\x43\x86\xa7\x55\xda\x3e\x24\xe0\x52\x43\x9b\x81\x15\x67\x5f\xd8\x4a\xea\x28\xed\x97\xb5\xc1\x81\x28\xa3\x5a\x2f\x9d\x13\x33\x38\x40\x15\xa7\xbd\x8c\xae\xb0\x4e\xfc\x8b\xb3\x7b\xd0\x72\xa3\x22\x86\x92\xfc\x37\x37\x6f\x37\x2b\xe7\x66\xa1\xb7\xeb\x66\x88\x2e\x9d\xa9\xef\x54\x71\x5c\x8e\xb7\x9c\xdd\xbf\x96\xbb\xa5\xe3\x83\x0f\xe1\xc8\xfe\x73\x4e\x08\xad\xd5\x96\x4e\xc2\xb3\x6c\xfe\x2a\x49\x92\xeb\x2a\x26\x6d\x24\xd7\x22\x89\xae\xb4\xcc\x36\x86\x5d\x1f\x52\x52\x95\x47\xec\xf0\x98\xbb\x2a\xe1\x53\x1e\xc7\x4c\x2c\x1d\xa3\x36\xac\x56\x26\x4a\x5b\x53\x93\x42\xbc\x74\xde\xfb\x9e\x0f\xef\x82\x60\xe4\x05\xc1\x08\xde\x05\x03\xbf\x1a\x0c\x43\x2f\x18\x86\xf0\x2e\x1c\xf9\x1e\x8a\x6c\x07\x3e\xfc\x82\x47\x86\xc4\x2d\xfc\x9a\x8e\xb3\x74\xde\x07\xe1\x94\x0c\xbc\xc0\x9f\x11\x1f\x6e\x83\x60\x40\xa6\xde\x6c\x46\x26\x10\x04\x33\xe2\x7b\xd3\x19\x19\xd7\x87\xb7\x41\x18\xe2\x38\x44\x8c\xd0\x27\x23\x6f\x32\x45\x8c\xc7\xe1\x2d\x62\x87\xde\x24\x24\x3e\x04\xe1\x80\x0c\xbd\xc9\x98\x0c\xea\xc3\xdb\x20\x9c\x90\x81\x37\xf5\xc9\x0c\x82\x70\x44\x46\xde\x74\x62\x31\x8e\x43\xbb\xcb\xcc\x9b\x4d\x90\xf5\xc0\x27\x63\x2f\xf0\x03\xc4\x1e\x0c\xc9\xd0\x0b\xfc\x01\x09\x9d\x86\x32\x78\x36\x4b\x27\xda\x28\xc5\x84\xb9\xc5\xd3\x71\x0e\xc7\x66\x14\x15\x3a\x91\x2a\xef\x49\xc5\x6d\x51\x08\x06\x7e\xb1\x83\xc0\x1f\x17\xbb\xeb\xa3\x83\xc9\xc8\xc8\x1e\x55\xf9\x8b\x4d\x18\x8c\x88\x3d\x96\xd2\x84\x43\x32\xb3\x93\x00\x82\x60\x4a\x26\x5e\x10\x8c\xc9\xc8\x1a\x71\x6a\xe1\x43\x3c\xc6\x01\x2e\xf8\x81\x35\xd8\x60\x8c\xca\xce\x48\x08\xc1\x60\x86\xc3\x29\x19\x42\x30\x0c\x49\x88\x43\x8b\x81\xc7\x32\x9d\x5a\x93\x4e\xd0\xd2\x43\x8b\x81\xd0\xd1\xd4\xee\x3a\x9c\x92\x91\x37\x1a\x20\x78\x34\x24\xbe\x37\x0a\x90\xdd\x68\x46\x26\x38\x44\x8c\xb1\x4f\x06\xde\x70\x86\x18\xe3\x01\x09\xbd\xe1\x00\xad\x3b\x09\xc8\xd0\x1b\xfa\x24\x80\xdb\xda\x38\x98\x8c\x49\xe0\x0d\x43\x94\x7b\x32\xc5\x5d\xc6\x24\x84\xdb\x60\x3a\x20\x01\xee\x38\x86\x60\x3a\x21\xa1\x37\x0e\xc8\x14\x82\x99\x4f\x66\xde\x18\x15\xbb\x0d\x66\x43\x32\xf2\xc6\xe8\x4c\xc1\x6c\x42\x26\xde\x64\x40\x42\x08\x7d\x9f\x04\xde\x04\x8f\xf3\x36\xb4\x2e\x36\xf5\x11\x1c\x8c\xd1\x0f\x86\x64\x56\x1f\xde\x86\x41\x48\x26\xde\x6c\x40\x02\x08\x7d\x6b\x9a\x31\xf1\x21\xf4\x47\x64\x88\x43\xe4\xe1\x8f\x48\xe0\x05\x7e\x48\x86\x10\xfa\x03\x34\xbe\x3f\xb1\x92\x58\x5f\x0e\x50\xee\xdb\x60\x1a\xe0\x41\x84\x53\x74\x9c\xb1\x5d\x08\xad\x42\xa3\x89\x3d\x94\xa1\xd5\x79\x34\xb1\xa7\x35\x46\xa4\xd1\x18\x17\x42\xeb\x97\xa3\xd0\x8e\x51\xa0\x77\xc1\x30\xc0\x2d\x06\x63\xcb\x76\x60\xcf\x71\x30\xc1\x08\x18\x06\xe8\x9b\x43\xeb\x9b\xc3\x00\xe1\xf8\x3f\xfc\xf2\x3c\xef\xac\xbb\x1d\x66\xe1\xa6\xdf\x2d\xfa\x7a\xbb\xbe\x59\xf4\x69\xbd\xc1\x7c\x5c\x3e\xad\x0c\xf3\x14\xbb\x08\x20\x07\x37\x3e\xab\x14\x54\xf0\x9c\x96\x59\x0a\x31\x22\x6a\x7a\xf7\x74\xcb\x60\x34\xf6\x73\x0d\x8c\x6a\xd6\xe3\xa2\x27\x37\xa6\xb5\x04\xdf\xb1\x7d\xa2\x68\xce\xf4\x29\xf1\xd7\xd3\x52\xe5\xff\xc5\x3b\x99\x63\x89\x6d\x29\x58\xc7\x78\x9c\x83\x92\x86\x1a\xe6\xfa\xdd\xa7\x2a\x60\x78\xce\x77\xfc\x4c\xb6\xbd\x70\x14\xb3\xf5\x93\xbc\x87\xe7\xbc\xa7\xcf\xe4\x1d\xf8\x2d\xac\x5b\x36\xa9\xba\x97\x5a\xcb\x32\x6a\xeb\x58\x5e\x74\x96\x70\x7a\x9e\x58\xf7\x5f\xd0\x41\x3c\x93\xeb\x33\xbd\xe4\x5c\x71\xa8\xb7\x19\x50\x6f\x2b\xaa\x66\xa8\x56\xea\x16\xc7\xe6\xe2\x08\x29\x91\x2c\xbe\x36\xb2\x70\x40\x0a\xdb\x61\x94\x53\xb7\xeb\xdc\x7c\xf8\xe9\x1f\xff\xbb\xe8\x97\x78\x97\x89\x93\xe4\x3e\xae\x11\xe3\x14\x89\x7f\xfc\xf1\xe7\x1f\x9a\xc4\xb5\x2e\xc7\x4e\x37\x59\xc9\xc3\xf6\xb3\xe7\xa5\x39\xe3\x37\x0d\xb3\x2d\x6c\x23\xd2\x84\xdb\x35\x2e\x8a\xcd\xe1\x22\x1a\xa5\x2c\xba\x5b\xc9\x9d\x03\x82\xe6\xec\xb8\x05\x6c\x69\xb6\xc1\x65\x99\xe7\xdc\x38\x60\xd1\x58\x0c\xfd\x0b\x2c\x75\x41\xc5\xa1\xba\x55\xb7\x03\xc5\x62\xe7\xa6\xa4\x5f\xf4\x71\xbd\x45\xca\x7e\x8b\x98\x8b\xfe\xb9\x42\x7f\xaa\x86\x46\x31\xf6\xbb\xf4\x5b\x63\xf7\xef\xdc\x20\xfd\xbf\xb3\x7e\xab\x4c\xae\x7e\x97\x7e\xab\x0c\xbb\x40\x24\xff\x03\xea\x2d\xfa\x9b\xec\xc9\xf0\xba\xa0\xe5\x05\x0d\x31\x08\x52\xce\x14\x55\x51\xba\x3f\xaa\x58\x83\x3c\xa1\xa7\xd5\xf1\xe6\x88\xdb\xa6\x54\x43\xa1\xfa\x6d\xa3\x1c\x3e\xe3\x2d\xe7\x91\x3c\x61\x26\x4a\xdd\x0e\x2d\x78\x9f\x8b\x44\x76\x4e\xb3\x33\x31\x29\x13\xae\x62\xba\x90\x42\x33\x58\xde\xc0\x61\x4c\x3e\x6b\x29\xdc\x6e\x1b\xba\xbd\x02\x2e\x6f\x20\x96\xd1\x26\x67\xc2\x10\xfb\x50\x05\x4b\xc0\x05\x12\x73\xc5\x22\x23\xd5\xbe\xfb\x98\x70\x23\x29\xb4\x01\xb9\xfa\xcc\x22\xa3\x61\x09\x1f\x4b\x97\xf0\xa0\x74\x7d\x0f\x0e\x41\xfe\xe9\xfa\x8c\x46\xb1\xa4\x24\xc0\xab\x19\x22\x2a\x96\x4b\x63\x49\x0c\x5d\x23\xfe\x19\x41\x75\xdf\x5e\x9e\xe5\xf1\x92\xff\x1c\xf0\x5e\x71\x5a\xdb\x50\x82\x36\x38\x4a\xd8\x06\x47\x41\xda\xe0\x6f\xdf\xfc\xf5\x87\x36\x78\x29\x70\xeb\xce\x74\x5d\x82\x1f\x2b\x45\x43\x1d\x23\x5b\x54\xb1\xb1\xe1\xe2\xc9\x77\xf1\x1c\x9a\x15\xab\xa4\xcd\x69\x51\x70\xb1\x86\x25\x08\x76\x0f\xef\x69\xe1\x7e\x6c\x8d\xbc\x8f\x1d\xd4\xb5\xe3\x41\x07\xe3\xad\xf3\xc9\xbb\x80\x85\x96\x42\x2c\x9b\x75\x2e\xa3\x95\xa6\x46\x44\xc5\xe2\xcb\x68\x68\xc7\x8a\xdb\xfe\x89\x3d\xe9\xfa\xdb\x48\xa5\x89\xbf\x8d\x87\x47\x54\xaa\x49\xa3\xbb\xce\xa7\x06\xd6\xa7\xee\xf5\x55\x03\xa8\x98\xd9\x28\x71\x30\x26\x59\x33\x53\x59\xfe\xb7\xdf\xa0\x53\x70\x71\xd7\x39\x2d\xfb\xde\x29\x0b\x1b\xcd\x73\x70\x77\xf6\xa8\xaa\x10\x20\x5c\x44\xd9\x26\x66\xda\xdd\x91\x92\xd9\x7f\xc2\x8e\xf0\x98\xe8\xcd\x4a\x1b\xe5\xfa\x1e\x4c\xbb\x30\xb7\xb0\xb6\xfe\xa9\x3c\x5f\x21\x63\xa6\xab\xd3\xdd\x72\x4d\x7e\xa0\x86\x7e\x60\xc6\xfd\x88\x7a\xb4\xa0\xda\x17\x81\x53\x74\x04\xb9\x76\xd1\x83\xaf\x55\xec\xcc\xc1\x42\xac\xbc\x25\xe4\x23\xce\xad\xa0\x9f\xe0\xa1\x7b\xc6\x9a\xc5\xeb\xcb\x52\x9c\x67\x80\x02\xdb\x28\xdd\x70\xe9\xea\xf5\xc9\xc1\xde\xd8\x39\x0f\xb7\xf2\x85\xa0\x6d\x8d\x6e\x8c\xfc\x27\x2b\x9f\xfa\x9a\xe1\x95\xd1\xbd\xdc\x98\x79\x4b\x78\x1c\x12\x30\x8f\x68\xd6\xb6\x8e\x1f\x2d\x95\x79\xcf\x4c\x2a\xe3\x39\x74\xca\x9c\xc6\xe2\x4e\xbb\x67\xe9\x94\xde\xb1\x9f\xe4\x3d\x55\xb1\x9e\x43\x47\x49\x69\xf4\x05\xd4\x92\x93\xed\x25\x3b\xff\x7c\x77\x01\x69\x95\xc9\xe8\xee\x43\xca\x13\x63\x5f\x00\x13\x9a\x69\xd6\x8e\x89\xc6\x7f\xcf\x05\xcf\xf9\x97\xaa\x43\x7d\x02\xb9\xa0\xf6\xa2\xc5\x84\x51\x34\x3b\x25\x68\xe0\x3f\x9c\x3b\x75\x7d\xca\x85\x61\x8a\x56\x6a\x34\xcd\xf7\x45\xca\xfc\x43\xc1\x58\x3c\x07\xbc\x5f\x37\xd6\x05\xdd\xf2\xb5\xdd\xfd\x75\xd9\xfd\x1e\x4e\xef\xa9\x3d\x8b\x74\xaf\x79\xa4\xe7\xe7\xd7\x2b\xb0\xcf\xda\xbb\x7f\xb1\x4c\x46\xdc\xec\xed\x1b\x76\x73\xcb\x9c\x8b\x3a\x46\xd8\xc4\x30\x3c\x67\xda\xb0\x62\x0e\xc1\x53\x62\x58\x6f\x6f\x53\xba\xca\xca\xce\x2b\xdf\x7e\x9c\xe6\x0e\x95\x93\xb7\xca\x47\x95\x92\xf7\xad\x7c\xad\x6c\xf2\xd2\x8a\x15\x49\xd0\x55\xc6\x5a\x6b\x52\xfd\xa3\x23\x9a\xb1\x1f\x29\x96\x66\x2b\x44\x2b\xe2\xc3\xcb\x1c\xc1\x66\x8e\x36\xd9\x12\x29\x5a\x23\x0f\x6a\x96\xb2\x4f\xf7\xcd\x57\x81\x87\x4b\xb7\xa8\x46\x36\x89\xa4\x30\x94\x0b\x5b\xed\x8f\xbd\xc8\x9a\x99\x37\x19\xc3\xe1\xeb\xfd\xdf\x62\xb7\x73\x7c\xb7\xed\x9c\x27\xae\xb2\x8d\xb9\x4c\x89\xeb\x9d\x66\x0e\x3b\xbc\xa1\x3f\x66\xbc\xbf\x97\x10\xf7\x28\x0f\xe6\xd2\xca\x34\xc7\xc4\xeb\x55\x89\xf2\xc1\x3b\x64\xc1\x5a\x92\x3e\x7c\x87\x26\x85\xdb\xb1\x97\xb3\x8e\x07\x6e\x41\x15\xcd\x75\x4b\x85\xe7\xc9\x61\x91\x58\xf6\x1f\xfd\x4f\xe7\x37\xe7\xc3\xe1\xa0\x94\x88\x62\xcb\xd6\x39\xcd\x75\x83\x04\x39\x37\x4a\xd4\x31\xf9\x77\xdb\x76\x81\x63\x8f\xf9\x2b\xf6\x98\x15\x75\xff\x3f\xbe\x1e\xc9\x1e\x0e\x13\x1e\x3f\xfc\xda\x7d\xa2\xe3\xc4\x26\xd6\xed\x56\x18\xd5\x3b\xb9\xed\x33\xb1\xad\xe4\x42\x30\xf5\x13\xdb\x19\x58\x1e\xde\xd0\x5b\x14\x78\x00\x96\x69\x66\xf5\xc0\xce\xf1\x77\x2a\x81\xa4\x27\x1a\xe8\xff\x1f\x15\x8e\x02\xc0\x72\xb9\x04\x07\xdb\x17\xe7\xb9\xe2\x23\xf2\x9f\x2e\xea\x85\x50\x85\x63\xdb\x54\xfb\xee\xaa\x1e\x49\x99\xa4\x31\x2c\x81\xea\xbd\x88\xc0\x6d\x71\xf1\x98\x27\x09\x53\x4c\x44\xe8\xc1\x6e\xc2\x95\x36\x1e\x50\x21\x4d\x8a\xd1\x15\xc9\x1c\x6b\x59\xd5\xa1\x28\x6d\x48\xd9\xa7\xb8\xf6\x5a\xf2\x5d\x85\x47\xb4\xcc\x99\xbb\x42\x50\x45\xe0\x52\x0f\x56\xdd\xee\x99\x26\xf4\x9e\x72\x53\xbf\x27\xad\x15\x2d\xd2\xce\x53\xb6\xab\xee\x46\x25\x06\x4e\xda\xdb\xf0\x32\xf4\xb0\x3b\xdd\x32\xf7\x51\x25\xf7\x31\x24\xbb\x1e\x20\x39\xa9\x5a\xb0\x52\x40\x64\x46\x09\x8f\xed\xa9\xaf\x08\x8f\xcf\x25\x7e\xe4\x4d\xe3\xb8\xce\xb8\xce\xeb\x64\x93\x4b\x8c\x49\x4e\x0b\x77\x87\x70\xf7\x2b\xf0\xb8\xec\x38\xbd\x43\xd3\x6a\x24\xb1\x23\x77\xd7\xf5\xc0\x5e\xf2\x0e\x08\x55\x0e\x37\x92\xd8\xd1\xa1\x8d\xf5\xa0\xfc\x3a\xb3\x9c\x9e\xd0\xc0\x83\x35\x7c\x43\x0f\x9b\x15\x5b\x6c\x54\xc2\xeb\x36\xb2\x90\x53\x55\x12\x25\xf3\x4a\x19\x3b\xfc\xfe\x7b\xa0\x04\xaf\x4c\x16\x64\x64\x9b\xe1\x4a\xc6\x6d\x86\xab\x36\x38\xd9\xf9\x8f\xec\xf6\xd0\x6d\xfd\xea\x56\x1b\x59\xa0\x57\x5b\xae\x87\xcc\x5f\xb5\x37\x04\x17\x3f\xf0\x7c\x93\xd9\xfe\xc8\xad\x71\x48\x92\xfb\xf8\x48\x76\xea\x6b\xcf\x67\xd2\x8e\x4d\x57\x3c\xe3\x5f\x98\x3b\xf2\xfd\x6f\xe3\x2a\xd3\xce\xfa\xe1\x34\xbc\xdd\x2a\x3a\x4e\xd5\x4c\x38\xe6\x9c\x47\x22\xcd\xcc\xdf\xb0\x99\xdc\xd2\xcc\x45\x2a\x0f\x06\xbe\x15\xe2\x88\xd1\x52\x9e\xf5\xeb\xfd\xdf\x69\xce\xdc\xc3\x33\x53\x97\x24\x52\xbd\xa1\x51\xea\x96\xb7\xac\x13\x0d\x76\x78\xd4\x6f\xb6\x4c\x98\x77\x5c\x1b\x26\x98\x72\x9d\x28\xa5\x62\xcd\x1c\x0f\xdc\xa7\x2f\xd0\x5f\xcb\xd7\x1d\xef\xf8\xa4\xf3\x00\x4b\x60\xc4\x50\xb5\x66\xa6\xe9\x59\xd5\x65\xc9\xd2\x7c\xc2\xc4\x59\x52\x5d\x88\x5d\x6c\x0a\x88\x62\x89\x62\x3a\x3d\x3f\xa2\x87\x6e\xf7\x49\x0b\xd8\x06\xa5\xf6\xe6\xd4\x7d\xb1\x92\x07\x05\xbf\xad\x59\xd5\xad\x90\xf2\x3a\x45\xea\x77\x27\x52\xb5\x9e\x97\x74\x3d\x9c\xba\x66\xe6\x1f\x25\x17\xb7\xd9\xfb\x3c\x34\x5b\xac\xaf\xf5\x1b\xc6\x5b\x2a\xe2\x8c\x29\x2b\x61\xc5\xf0\x91\x18\xab\x64\x13\xf7\xbc\x46\x36\x31\xc8\x4a\xc6\x7b\xc2\xea\x16\xd3\x44\x8a\xf7\x72\xa3\xd9\xcf\x29\x63\x19\x46\x9a\x5d\xbe\xe0\x20\xb8\xf1\x77\x16\x81\x44\x46\x65\xff\xc3\xf6\xdd\x43\xc9\x83\x7e\x1f\x2a\x18\xc4\xcc\xd8\x27\x2f\x0a\x39\x8d\xc0\xc8\x4d\x94\x16\x34\x86\x82\x8b\x28\x05\x2e\x40\x8a\x7b\xbb\x9b\xe5\xd4\xdc\xa4\x29\x77\x5d\xc6\x4a\xc0\x33\xd7\xa9\x47\x24\x94\xdf\x3b\x54\xbf\xc7\x5a\xf4\xcb\xdf\x35\x5c\x2d\xfa\xf6\xb7\x67\xff\x17\x00\x00\xff\xff\xaa\x95\xa2\xbc\x92\x26\x00\x00")

func htmlIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_htmlIndexHtml,
		"html/index.html",
	)
}

func htmlIndexHtml() (*asset, error) {
	bytes, err := htmlIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "html/index.html", size: 9874, mode: os.FileMode(420), modTime: time.Unix(1686147264, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"html/favicon.ico": htmlFaviconIco,
	"html/index.html":  htmlIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"html": &bintree{nil, map[string]*bintree{
		"favicon.ico": &bintree{htmlFaviconIco, map[string]*bintree{}},
		"index.html":  &bintree{htmlIndexHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
